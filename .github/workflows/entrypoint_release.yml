name: Release (all tags)

on:
  push:
    tags:
      - "*.*.*"
      - "*.*.*b*"

env:
  # intermediary registry in which architecture-specific images must be pushed
  # todo : change this to preprod, and the var name to DOCKER_PREPROD_REPO
  DOCKER_BUILD_REPO: "nwodtuhs/exegol-dev-preprod"
  # final registry target, in which arch-specific images must be aggregated
  DOCKER_TARGET_REPO: "nwodtuhs/exegol-dev-prod"
  # Setting IMAGE_VERSION for prod images != nightly
  IMAGE_VERSION: ${{ github.ref_name }}

jobs:
  publish:
    name: Push to prod
    runs-on: self-hosted
    strategy:
      matrix:
        tag: [ debug_release ]
    #        tag: [ full, light, ad, web, osint ]
    steps:
      - name: Inspect preprod manifest
        id: inspect_manifest
        run: |
          echo "digests=$(docker manifest inspect ${DOCKER_BUILD_REPO}:${{ matrix.tag }} | jq -r '.manifests[].digest' | tr '\n' ' ')"
          echo "digests=$(docker manifest inspect ${DOCKER_BUILD_REPO}:${{ matrix.tag }} | jq -r '.manifests[].digest' | tr '\n' ' ')" >> $GITHUB_OUTPUT
      - name: Publish prod manifest
        uses: ./.github/workflows/sub_manifest.yml
        with:
          MANIFEST_LIST: ${DOCKER_TARGET_REPO}:${{ matrix.tag }}
          MANIFEST: ${{ steps.inspect_manifest.outputs.digests }}
      - name: Inspect preprod version manifest
        id: inspect_version_manifest
        run: |
          echo "digests=$(docker manifest inspect ${DOCKER_BUILD_REPO}:${{ matrix.tag }}-${IMAGE_VERSION} | jq -r '.manifests[].digest' | tr '\n' ' ')"
          echo "digests=$(docker manifest inspect ${DOCKER_BUILD_REPO}:${{ matrix.tag }}-${IMAGE_VERSION} | jq -r '.manifests[].digest' | tr '\n' ' ')" >> $GITHUB_OUTPUT
      - name: Publish prod manifest
        uses: ./.github/workflows/sub_manifest.yml
        with:
          MANIFEST_LIST: ${DOCKER_TARGET_REPO}:${{ matrix.tag }}
          MANIFEST: ${{ steps.inspect_version_manifest.outputs.digests }}