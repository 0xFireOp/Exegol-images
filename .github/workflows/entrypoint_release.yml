name: Release (all tags)

on:
  push:
    tags:
      - '*'

env:
  # intermediary registry in which architecture-specific images must be pushed
  DOCKER_BUILD_REPO: "nwodtuhs/exegol-builds"
  # final registry target, in which arch-specific images must be aggregated
  DOCKER_TARGET_REPO: "nwodtuhs/exegol-dev"
  IMAGE_BASE_NAME: "debug"
  DOCKERFILE: "debug.dockerfile"
  # Setting IMAGE_VERSION for prod images != nightly
  #IMAGE_VERSION: ${{ github.ref_name }}

jobs:
  publish:
    name: Publish
    timeout-minutes: 60
    runs-on: michmich
    # only publishing if the tests were a success (implied by the success of build_belt).
    # todo : commented line is probably useless since a failing test should mark the build_belt as failed
    #if: needs.build_belt.result == 'success' && !contains(needs.build_belt.outputs.*, 'failure')
    if: needs.build_belt.result == 'success'
    steps:
      - name: Login to Dockerhub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Create and push manifest
        if: success()
        run: |
          echo "Create manifest"
          docker manifest create ${DOCKER_TARGET_REPO}:${IMAGE_BASE_NAME} ${DOCKER_BUILD_REPO}:${IMAGE_BASE_NAME}-arm64 ${DOCKER_BUILD_REPO}:${IMAGE_BASE_NAME}-amd64
          docker manifest push ${DOCKER_TARGET_REPO}:${IMAGE_BASE_NAME}
          docker manifest rm ${DOCKER_TARGET_REPO}:${IMAGE_BASE_NAME}
      - name: Create and push version manifest
        if: success() && env.IMAGE_VERSION != ''
        run: |
          echo "Create version manifest"
          docker manifest create ${DOCKER_TARGET_REPO}:${IMAGE_BASE_NAME}-${IMAGE_VERSION} ${DOCKER_BUILD_REPO}:${IMAGE_BASE_NAME}-arm64 ${DOCKER_BUILD_REPO}:${IMAGE_BASE_NAME}-amd64
          docker manifest push ${DOCKER_TARGET_REPO}:${IMAGE_BASE_NAME}-${IMAGE_VERSION}
          docker manifest rm ${DOCKER_TARGET_REPO}:${IMAGE_BASE_NAME}-${IMAGE_VERSION}